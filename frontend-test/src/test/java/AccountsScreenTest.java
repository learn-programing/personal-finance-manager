import static org.hamcrest.CoreMatchers.equalTo;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.MatcherAssert.assertThat;

import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

public class AccountsScreenTest extends TestBase {

  // TODO take this value from System properties / gradle properties - it should be possible to provide this value from outside
  private static final String FRONTEND_URL = "http://localhost:4200/";

  private AccountsScreenElements accountsElements; // TODO you can simply name it AccountsScreen (class and field)

  @BeforeClass
  void getElements() {
    accountsElements = new AccountsScreenElements(webDriver);
  }

  public AccountsScreenTest() {
    super(FRONTEND_URL);
  }

  @Test
  public void shouldReadPageTitle() {
    //given
    String titleExpected = "Welcome to Personal Finance Manager !";

    //when
    String titleResult = accountsElements.getTitle();

    //then
    assertThat(titleResult, is(equalTo(titleExpected)));
  }

  @Test
  public void shouldReadAccountId() {
    //given
    long expectedId = 1L; // TODO id is generated by database so you should not hardcode this value - you need to take it from preconditions request.

    //when
    long resultId = accountsElements.getId();

    //then
    assertThat(resultId, is(equalTo(expectedId)));
  }

  // TODO - it does not make sense to make it so detailed - if you verify account details you can do it in single test.
  @Test
  public void shouldReadDescription() {
    //given
    String expectedDescription = "mbank";

    //when
    String resultDescription = accountsElements.getDescription();

    //then
    assertThat(resultDescription, is(equalTo(expectedDescription)));
  }

  // TODO - it does not make sense to make it so detailed - if you verify account details you can do it in single test.
  @Test
  public void shouldReadBalance() {
    //given
    String expectedBalance = "500 $";

    //when
    String resultBalance = accountsElements.getBalance();

    //then
    assertThat(resultBalance, is(equalTo(expectedBalance)));
  }
}