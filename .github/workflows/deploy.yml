name: Deploy to AWS

on:
  push:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    container: piokol/pfm:19 

    timeout-minutes: 25

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13
    - name: Grant execute permission for gradlew
      run: cd backend && chmod +x gradlew
    - run: ls -al
    - name: Build with Gradle
      run: cd backend && ./gradlew build -x generateGitProperties
#     - name: Archive backend artifacts
#       uses: actions/upload-artifact@v1
#       with:
#         name: backend
#         path: backend/build/reports
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - run: cd frontend && npm install
#     - run: cd frontend && npm install -g tslint typescript @angular/cli protractor protractor-retry
#     - run: cd frontend && tslint --config tslint.json --project tsconfig.json
#     - run: cd frontend && ng build
#     - run: ./scripts/run_e2e.sh

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.AWS_PRIVATE_KEY_PASSIONATE_SOFTWARE_ENGINEER }}
        name: id_rsa
        known_hosts: ${{ secrets.KNOWN_HOSTS }}   
    - run: |
          export EC2_INSTANCE=ec2-3-121-199-74.eu-central-1.compute.amazonaws.com
          ssh -i /github/home/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$EC2_INSTANCE "mkdir -p app"
          scp -i /github/home/.ssh/id_rsa backend/build/libs/backend-1.0.jar ec2-user@$EC2_INSTANCE:/home/ec2-user/app/backend-1.0.jar.new
          scp -i /github/home/.ssh/id_rsa ../../../scripts/start_backend.sh ec2-user@$EC2_INSTANCE:/home/ec2-user/app/start_app.sh
          ssh -i /github/home/.ssh/id_rsa ec2-user@$EC2_INSTANCE "cd app && source ~/.bash_profile && ./start_app.sh"
          ./scripts/wait_until_app_is_ready.sh $EC2_INSTANCE
