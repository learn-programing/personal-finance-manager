name: Deploy to AWS

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: piokol/pfm:19 

    timeout-minutes: 45

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 1.13
      uses: actions/setup-java@v1
      with:
        java-version: 1.13
    
    - name: Build backend
      run: |
          cd backend
          chmod +x gradlew
          ./gradlew build -x generateGitProperties
    
    - name: Archive backend artifacts
      uses: actions/upload-artifact@v1
      with:
        name: backend
        path: backend/build/reports
    
    - name: Setup NodeJS
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    
    - name: Build frontend
      run: |
          cd frontend 
          npm install
          npm install -g tslint typescript @angular/cli protractor protractor-retry
          tslint --config tslint.json --project tsconfig.json
          ng build
      
# #     - name: Run E2E tests
# #       run: ./scripts/run_e2e.sh

    - name: Install SSH key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.AWS_PRIVATE_KEY_PASSIONATE_SOFTWARE_ENGINEER }}
        name: id_rsa
        known_hosts: ${{ secrets.KNOWN_HOSTS }}   
   
    - name: Deploy backend
      run: |
          export EC2_INSTANCE=ec2-3-121-199-74.eu-central-1.compute.amazonaws.com
          ssh -i /github/home/.ssh/id_rsa -o StrictHostKeyChecking=no ec2-user@$EC2_INSTANCE "mkdir -p app"
          scp -i /github/home/.ssh/id_rsa backend/build/libs/backend-1.0.jar ec2-user@$EC2_INSTANCE:/home/ec2-user/app/backend-1.0.jar.new
          scp -i /github/home/.ssh/id_rsa scripts/start_backend.sh ec2-user@$EC2_INSTANCE:/home/ec2-user/app/start_app.sh
          ssh -i /github/home/.ssh/id_rsa ec2-user@$EC2_INSTANCE "cd app && source ~/.bash_profile && ./start_app.sh"
          ./scripts/wait_until_app_is_ready.sh $EC2_INSTANCE
          
    - name: Deploy frontend # TODO simplify it by fixing aws-cli installation in docker image
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        export APP_S3_BUCKET=s3://pfm.passionatesoftwareengineer.com
        
        cd frontend
        ng build --configuration=aws
        cd dist/frontend
        
        curl -O https://bootstrap.pypa.io/get-pip.py
        python3 get-pip.py --user
        export PATH=/root/.local/bin:$PATH
        pip3 uninstall awscli
        pip3 install awscli --upgrade --user
        aws s3 cp --recursive --acl "public-read" . $APP_S3_BUCKET
