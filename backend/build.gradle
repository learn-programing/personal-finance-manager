import com.github.spotbugs.SpotBugsTask

buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'org.owasp:dependency-check-gradle:4.0.2'
    }
}

// keep alphabetical order in groups
plugins {
    // 3rd party
    id "com.github.ben-manes.versions" version "0.20.0"
    id "com.github.spotbugs" version "1.6.9"
    id "com.gorylenko.gradle-git-properties" version "2.0.0"
    id 'de.aaschmid.cpd' version '1.2'
    id 'io.spring.dependency-management' version "1.0.6.RELEASE"
    id 'org.owasp.dependencycheck' version '4.0.2'
    id 'org.springframework.boot' version '2.1.2.RELEASE'

    // core
    id 'checkstyle'
    id 'idea'
    id "jacoco"
    id 'java'
    id 'pmd'
    id 'project-report'
}

version '1.0'

sourceCompatibility = 1.11

repositories {
    mavenCentral()
}

// keep alphabetical order in groups
dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    testCompile 'io.rest-assured:rest-assured:3.3.0'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-junit-jupiter:2.23.4'
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit' // excluding JUnit4
        exclude group: 'org.assertj' // to avoid confusion in imports (e.g. assertThat)
    }
    compile 'com.google.code.findbugs:annotations:3.0.1'
    compile 'com.h2database:h2:1.4.197'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile "org.flywaydb:flyway-core:5.2.4"
    compile 'org.postgresql:postgresql:42.2.5'
    compile 'org.projectlombok:lombok:1.18.4'
    compile 'org.springframework.security:spring-security-crypto'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile group: 'org.apache.commons',name: 'commons-lang3', version: '3.9'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.3.RELEASE'
}

jacoco {
    toolVersion = "0.8.2"
}

spotbugs {
    toolVersion = '3.1.10'
}

checkstyle {
    configFile file('config/checkstyle.xml')
    toolVersion '8.11'
    showViolations = true
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled = false
        csv.enabled = false
        html.destination file("${buildDir}/reports/jacoco/html")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 1.00
            }
        }
        rule {
            limit {
                counter = 'LINE'
                minimum = 1.00
            }
        }
        rule {
            limit {
                counter = 'CLASS'
                minimum = 1.00
            }
        }
        rule {
            limit {
                counter = 'METHOD'
                minimum = 1.00
            }
        }
    }
}

tasks.withType(SpotBugsTask) {
    reports {
        xml.enabled = true
        html.enabled = false
    }
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:all" << "-Xlint:-processing" << "-Werror"
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

cpdCheck {
    source = sourceSets.main.allJava // only java, groovy and scala classes in 'main' sourceSets
    minimumTokenCount = 70
}

gitProperties {
    dateFormat = "yyyy-MM-dd'T'HH:mmZ"
    dateFormatTimeZone = "UTC"
}
