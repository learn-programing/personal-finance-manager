buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.2.RELEASE")
        classpath 'com.h2database:h2:1.4.191'
    }
}

plugins {
    id "org.flywaydb.flyway" version "5.1.1"
}

apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: "jacoco"
apply plugin: 'java'
apply plugin: 'org.springframework.boot'

version '1.0'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.9.5'

    compile 'com.h2database:h2:1.0.60'
    compile 'io.rest-assured:spring-mock-mvc:3.1.0'
    compile 'io.springfox:springfox-swagger-ui:2.9.2'
    compile 'io.springfox:springfox-swagger2:2.9.2'
    compile 'javax.xml.bind:jaxb-api:2.3.0'
    compile 'org.postgresql:postgresql:42.1.4'
    compile "org.projectlombok:lombok:1.18.0"
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
}

flyway {
    url = 'jdbc:h2:file:./target/flyway'
    user = 'sa'
}

jacocoTestReport {
    group = "Reporting"
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'BRANCH'
                minimum = 0.55
            }
        }
        rule {
            limit {
                counter = 'LINE'
                minimum = 0.80
            }
        }
        rule {
            enabled = false
            element = 'CLASS'
            excludes = ['com.pfm.Application']
            limit {
                counter = 'BRANCH'
                minimum = 0.80
            }
        }
        rule {
            enabled = false
            element = 'CLASS'
            excludes = ['com.pfm.Application']
            limit {
                counter = 'LINE'
                minimum = 0.90
            }
        }
    }
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}